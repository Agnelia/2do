name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ main, test ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main, test ]

env:
  FLUTTER_VERSION: '3.35.4'
  FLUTTER_CHANNEL: 'stable'

jobs:
  build_and_deploy_test:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/test') || (github.event_name == 'pull_request' && github.event.action != 'closed' && github.base_ref == 'test')
    runs-on: ubuntu-latest
    name: Build and Deploy Test Environment
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Install dependencies
        run: flutter pub get

      # Regenerate code if needed
      - name: Generate code
        run: flutter pub run build_runner build --delete-conflicting-outputs || echo "No code generation needed"

      # Tests disabled - will be re-enabled later
      # - name: Run tests
      #   run: flutter test

      # - name: Analyze code
      #   run: flutter analyze

      - name: Clean build artifacts
        run: flutter clean

      - name: Reinstall dependencies
        run: flutter pub get

      - name: Build Flutter web app for test
        run: flutter build web --release --dart-define=ENVIRONMENT=test --verbose

      - name: Copy test static web app config
        run: cp azure-config/test/staticwebapp.config.json build/web/

      - name: Build And Deploy to Test
        id: builddeploy_test
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_TEST }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "build/web"
          api_location: ""
          output_location: ""
          skip_app_build: true

  build_and_deploy_prod:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.event.action != 'closed' && github.base_ref == 'main')
    runs-on: ubuntu-latest
    name: Build and Deploy Production Environment
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Install dependencies
        run: flutter pub get

      # Regenerate code if needed
      - name: Generate code
        run: flutter pub run build_runner build --delete-conflicting-outputs || echo "No code generation needed"

      # Tests disabled - will be re-enabled later
      # - name: Run tests
      #   run: flutter test

      # - name: Analyze code
      #   run: flutter analyze

      - name: Clean build artifacts
        run: flutter clean

      - name: Reinstall dependencies
        run: flutter pub get

      - name: Build Flutter web app for production
        run: flutter build web --release --dart-define=ENVIRONMENT=prod --verbose

      - name: Copy production static web app config
        run: cp azure-config/prod/staticwebapp.config.json build/web/

      - name: Build And Deploy to Production
        id: builddeploy_prod
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROD }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "build/web"
          api_location: ""
          output_location: ""
          skip_app_build: true

  close_pull_request_test:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.base_ref == 'test'
    runs-on: ubuntu-latest
    name: Close Pull Request Test Environment
    steps:
      - name: Close Pull Request
        id: closepullrequest_test
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_TEST }}
          action: "close"

  close_pull_request_prod:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    name: Close Pull Request Production Environment
    steps:
      - name: Close Pull Request
        id: closepullrequest_prod
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROD }}
          action: "close"